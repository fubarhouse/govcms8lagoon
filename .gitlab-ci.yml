---

image: govcmsdev/gitlab-ci

services:
  - "docker:dind"

stages:
  - Build
  - Scan

Build:

  stage: Build

  artifacts:
    paths:
      - /var/log/container-diff/

  script:

    # Export dynamic variables
    - export DOCKERHUB_NAMESPACE="${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}"
    - export IMAGE_VERSION_TAG_PREFIX="";

    # Handle master branch for IMAGE_VERSION_TAG gracefully.
    - if [[ "${CI_COMMIT_REF_NAME}" == "master" ]]; then
        export IMAGE_VERSION_TAG="latest";
      else
        export IMAGE_VERSION_TAG="${CI_COMMIT_REF_NAME//\//-}";
      fi

    # Add Edge tag for when tagging is used:
    - IMAGE_TAG_EDGE=${CI_COMMIT_TAG:-}

    # Docker-Compose file linting (check for syntax errors)
    - docker-compose config -q
    # Add Environment variables stored in code.
    - cp .env.default .env
    # Ensure docker network amazeeio-network is present.
    - docker network prune -f && docker network inspect amazeeio-network >/dev/null || docker network create amazeeio-network
    # Build the project
    - docker-compose build
    # Start the project
    - docker-compose up -d
    - docker image ls

    # Log in to the private registry.
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}

    # Push the images to the registry.
    - .docker/push.sh

    # Run container-diff checks
    - mkdir /var/log/container-diff
    - $HOME/bin/container-diff diff --type=file registry.hub.docker.com/${CI_PROJECT_NAME}/govcms8:latest ${CI_REGISTRY}/${DOCKERHUB_NAMESPACE}/govcms8:${IMAGE_VERSION_TAG} > /var/log/container-diff/govcms8.txt
    - $HOME/bin/container-diff diff --type=file registry.hub.docker.com/${CI_PROJECT_NAME}/mariadb-drupal:latest ${CI_REGISTRY}/${DOCKERHUB_NAMESPACE}/mariadb-drupal:${IMAGE_VERSION_TAG} > /var/log/container-diff/mariadb-drupal.txt
    - $HOME/bin/container-diff diff --type=file registry.hub.docker.com/${CI_PROJECT_NAME}/nginx-drupal:latest ${CI_REGISTRY}/${DOCKERHUB_NAMESPACE}/nginx-drupal:${IMAGE_VERSION_TAG} > /var/log/container-diff/nginx-drupal.txt
    - $HOME/bin/container-diff diff --type=file registry.hub.docker.com/${CI_PROJECT_NAME}/php:latest ${CI_REGISTRY}/${DOCKERHUB_NAMESPACE}/php:${IMAGE_VERSION_TAG} > /var/log/container-diff/php.txt
    - $HOME/bin/container-diff diff --type=file registry.hub.docker.com/${CI_PROJECT_NAME}/redis:latest ${CI_REGISTRY}/${DOCKERHUB_NAMESPACE}/redis:${IMAGE_VERSION_TAG} > /var/log/container-diff/redis.txt
    - $HOME/bin/container-diff diff --type=file registry.hub.docker.com/${CI_PROJECT_NAME}/solr:latest ${CI_REGISTRY}/${DOCKERHUB_NAMESPACE}/solr:${IMAGE_VERSION_TAG} > /var/log/container-diff/solr.txt
    - $HOME/bin/container-diff diff --type=file registry.hub.docker.com/${CI_PROJECT_NAME}/test:latest ${CI_REGISTRY}/${DOCKERHUB_NAMESPACE}/test:${IMAGE_VERSION_TAG} > /var/log/container-diff/test.txt
    - $HOME/bin/container-diff diff --type=file registry.hub.docker.com/${CI_PROJECT_NAME}/varnish-drupal:latest ${CI_REGISTRY}/${DOCKERHUB_NAMESPACE}/varnish-drupal:${IMAGE_VERSION_TAG} > /var/log/container-diff/varnish-drupal.txt

    # Clean-up.
    - docker-compose down

Scan:
  stage: Scan
  image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
    # Defining two new variables based on GitLab's CI/CD predefined variables
    # https://docs.gitlab.com/ee/ci/variables/#predefined-environment-variables
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG
    CI_APPLICATION_TAG: $CI_COMMIT_SHA
    # Prior to this, you need to have the Container Registry running for your project and setup a build job
    # with at least the following steps:
    #
    # docker build -t $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG .
    # docker push $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHA
    #
    # Container Scanning deals with Docker images only so no need to import the project's Git repository:
    GIT_STRATEGY: none
    # Services and containers running in the same Kubernetes pod are all sharing the same localhost address
    # https://docs.gitlab.com/runner/executors/kubernetes.html
    DOCKER_SERVICE: docker
    DOCKER_HOST: tcp://${DOCKER_SERVICE}:2375/
    # https://hub.docker.com/r/arminc/clair-local-scan/tags
    CLAIR_LOCAL_SCAN_VERSION: v2.0.8_0ed98e9ead65a51ba53f7cc53fa5e80c92169207
    CLAIR_EXECUTABLE_VERSION: v12
    CLAIR_EXECUTABLE_SHA: 44f2a3fdd7b0d102c98510e7586f6956edc89ab72c6943980f92f4979f7f4081
    ## Disable the proxy for clair-local-scan, otherwise Container Scanning will
    ## fail when a proxy is used.
    NO_PROXY: ${DOCKER_SERVICE},localhost
  allow_failure: true
  services:
    - docker:stable-dind
  script:
    - if [[ -n "$KUBERNETES_PORT" ]]; then { export DOCKER_SERVICE="localhost" ; export DOCKER_HOST="tcp://${DOCKER_SERVICE}:2375" ; } fi
    - |
      if [[ -n "$CI_REGISTRY_USER" ]]; then
        echo "Logging to GitLab Container Registry with CI credentials..."
        docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
        echo ""
      fi
    - docker run -d --name db arminc/clair-db:latest
    - docker run -p 6060:6060 --link db:postgres -d --name clair --restart on-failure arminc/clair-local-scan:${CLAIR_LOCAL_SCAN_VERSION}
    - apk add -U wget ca-certificates
    - docker pull ${CI_APPLICATION_REPOSITORY}:${CI_APPLICATION_TAG}
    - wget https://github.com/arminc/clair-scanner/releases/download/${CLAIR_EXECUTABLE_VERSION}/clair-scanner_linux_amd64
    - echo "${CLAIR_EXECUTABLE_SHA}  clair-scanner_linux_amd64" | sha256sum -c
    - mv clair-scanner_linux_amd64 clair-scanner
    - chmod +x clair-scanner
    - touch clair-whitelist.yml
    - retries=0
    - echo "Waiting for clair daemon to start"
    - while( ! wget -T 10 -q -O /dev/null http://${DOCKER_SERVICE}:6060/v1/namespaces ) ; do sleep 1 ; echo -n "." ; if [ $retries -eq 10 ] ; then echo " Timeout, aborting." ; exit 1 ; fi ; retries=$(($retries+1)) ; done
    # Perform container scans:
    - echo "${CI_APPLICATION_REPOSITORY}/SERVICE:${CI_APPLICATION_TAG}"
    - ./clair-scanner -c http://${DOCKER_SERVICE}:6060 --ip $(hostname -i) -r gl-container-scanning-report_chrome.json -l clair.log -w clair-whitelist.yml ${CI_APPLICATION_REPOSITORY}/chrome:${CI_APPLICATION_TAG} || true
    - ./clair-scanner -c http://${DOCKER_SERVICE}:6060 --ip $(hostname -i) -r gl-container-scanning-report_govcms8.json -l clair.log -w clair-whitelist.yml ${CI_APPLICATION_REPOSITORY}/govcms8:${CI_APPLICATION_TAG} || true
    - ./clair-scanner -c http://${DOCKER_SERVICE}:6060 --ip $(hostname -i) -r gl-container-scanning-report_mariadb-drupal.json -l clair.log -w clair-whitelist.yml ${CI_APPLICATION_REPOSITORY}/mariadb-drupal:${CI_APPLICATION_TAG} || true
    - ./clair-scanner -c http://${DOCKER_SERVICE}:6060 --ip $(hostname -i) -r gl-container-scanning-report_nginx-drupal.json -l clair.log -w clair-whitelist.yml ${CI_APPLICATION_REPOSITORY}/nginx-drupal:${CI_APPLICATION_TAG} || true
    - ./clair-scanner -c http://${DOCKER_SERVICE}:6060 --ip $(hostname -i) -r gl-container-scanning-report_php.json -l clair.log -w clair-whitelist.yml ${CI_APPLICATION_REPOSITORY}/php:${CI_APPLICATION_TAG} || true
    - ./clair-scanner -c http://${DOCKER_SERVICE}:6060 --ip $(hostname -i) -r gl-container-scanning-report_redis.json -l clair.log -w clair-whitelist.yml ${CI_APPLICATION_REPOSITORY}/redis:${CI_APPLICATION_TAG} || true
    - ./clair-scanner -c http://${DOCKER_SERVICE}:6060 --ip $(hostname -i) -r gl-container-scanning-report_solr.json -l clair.log -w clair-whitelist.yml ${CI_APPLICATION_REPOSITORY}/solr:${CI_APPLICATION_TAG} || true
    - ./clair-scanner -c http://${DOCKER_SERVICE}:6060 --ip $(hostname -i) -r gl-container-scanning-report_test.json -l clair.log -w clair-whitelist.yml ${CI_APPLICATION_REPOSITORY}/test:${CI_APPLICATION_TAG} || true
    - ./clair-scanner -c http://${DOCKER_SERVICE}:6060 --ip $(hostname -i) -r gl-container-scanning-report_varnish-drupal.json -l clair.log -w clair-whitelist.yml ${CI_APPLICATION_REPOSITORY}/varnish-drupal:${CI_APPLICATION_TAG} || true
  artifacts:
    reports:
      container_scanning: gl-container-scanning-report.json
  dependencies: []
  only:
    refs:
      - branches
    variables:
      - $GITLAB_FEATURES =~ /\bcontainer_scanning\b/
  except:
    variables:
      - $CONTAINER_SCANNING_DISABLED

before_script:
  - curl -LO https://storage.googleapis.com/container-diff/latest/container-diff-linux-amd64 && chmod +x container-diff-linux-amd64
  - mkdir -p $HOME/bin
  - export PATH=$PATH:$HOME/bin
  - mv container-diff-linux-amd64 $HOME/bin/container-diff

